<?php

/**
 * Implements hook_install().
 */
function lm_struct_elem_install(){
  if(!in_array('lm_struct_elem', node_type_get_names())){
    $type = array(
      'type' => 'lm_struct_elem',
      'name' => t('Structure element'),
      'base' => 'node_content',
      'custom' => true,
      'modified' => false,
      'locked' => false,
      'module' => 'lm_struct_elem',
      'has_title' => true,
      'title_label' => t('Title'),
    );

    $type = node_type_set_defaults($type);
    node_type_save($type);
    variable_set('comment_lm_struct_elem', COMMENT_NODE_CLOSED);
  }
}

/**
 * Implements hook_uninstall()
 */
function lm_struct_elem_uninstall(){
  $result = db_select('node', 'n')
    ->fields('n', array('nid'))
    ->condition("n.type", 'lm_struct_elem')
    ->execute();

  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }

  // delete all nodes
  node_delete_multiple($nids);


  node_type_delete('lm_struct_elem');

  //purge all field information
  field_purge_batch(1000);
}


/**
 * Implements hook_schema().
 */
function lm_struct_elem_schema(){
  $schema['lm_relationships'] = array(
    'description' => 'This table holds relationship data between Learnmixer Collections and Microcontent types',
    'fields' => array(
      'nid' => array(
        'description' => 'The primary identifier of a created node',
        'type' => 'int',
        'unsigned' => true,
        'not null' => true,
      ),
      'type' => array(
        'description' => 'Content type of a node',
        'type' => 'varchar',
        'length' => 32,
        'not null' => true,
        'default' => 0,
      ),
      'parent' => array(
        'description' => 'Parent nid this element belongs to. 0 if highest level',
        'type' => 'int',
        'unsigned' => true,
        'not null' => true,
        'default' => 0,
      ),
      'hidden' => array(
        'description' => '0 - visible, 1 - hidden',
        'type' => 'int',
        'unsigned' => true,
        'not null' => true,
        'default' => 0,
      ),
      'weight' => array(
        'description' => 'Where to display part',
        'type' => 'int',
        'unsigned' => true,
        'not null' => true,
        'default' => 0,
      ),
      'collection' => array(
        'description' => 'nid of a collection this part belongs to. 0 if it is highest level collection',
        'type' => 'int',
        'unsigned' => true,
        'not null' => true,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'lm_col_nid' => array('nid'),
      'lm_col_type' => array('type'),
      'lm_col_col' => array('collection'),
    ),
  );

  return $schema;
}
